import { defineConfig } from "vite";
import { resolve } from "path";
import { svelte } from "@sveltejs/vite-plugin-svelte";
import { copyFileSync, existsSync } from "fs";

export default defineConfig({
	css: {
		modules: {
			scopeBehaviour: "local",
			localsConvention: "camelCase",
		},
	},
	build: {
		lib: {
			entry: resolve(__dirname, "src/main.ts"),
			formats: ["cjs"],
			fileName: () => "main.js",
		},
		rollupOptions: {
			external: [
				"obsidian",
				"electron",
				"@codemirror/autocomplete",
				"@codemirror/collab",
				"@codemirror/commands",
				"@codemirror/language",
				"@codemirror/lint",
				"@codemirror/search",
				"@codemirror/state",
				"@codemirror/view",
				"@lezer/common",
				"@lezer/highlight",
				"@lezer/lr",
			],
			output: {
				exports: "named",
				banner: `/*
THIS IS A GENERATED/BUNDLED FILE BY VITE
if you want to view the source, please visit the github repository of this plugin
*/`,
				entryFileNames: "main.js",
				sourcemap: process.env.NODE_ENV !== "production",
				format: "cjs",
				assetFileNames: (chunkInfo) => {
					// Use the first name from the names array instead of the deprecated "name" property
					const assetName =
						Array.isArray(chunkInfo.names) &&
						chunkInfo.names.length > 0
							? chunkInfo.names[0]
							: "";
					if (assetName.endsWith(".css")) {
						return "styles.css";
					}
					return "assets/[name]-[hash][extname]";
				},
			},
		},
		outDir: "./build",
		emptyOutDir: false,
		sourcemap: process.env.NODE_ENV !== "production",
		minify: process.env.NODE_ENV === "production",
	},
	plugins: [
		svelte(),
		{
			name: "copy-to-root",
			writeBundle() {
				try {
					// Copy main.js to root
					if (existsSync("./build/main.js")) {
						copyFileSync("./build/main.js", "./main.js");
						console.log("✓ Copied main.js to root");
					} else {
						console.warn("⚠️ main.js not found in build directory");
					}

					// Copy styles.css to root if it exists
					if (existsSync("./build/styles.css")) {
						copyFileSync("./build/styles.css", "./styles.css");
						console.log("✓ Copied styles.css to root");
					} else {
						console.warn(
							"⚠️ styles.css not found in build directory"
						);
					}

					// Copy sourcemap files if they exist
					if (existsSync("./build/main.js.map")) {
						copyFileSync("./build/main.js.map", "./main.js.map");
						console.log("✓ Copied main.js.map to root");
					}

					console.log("✓ File copying completed");
				} catch (error) {
					console.error("❌ Error copying files:", error);
					throw error; // Re-throw to fail the build
				}
			},
		},
	],
});
